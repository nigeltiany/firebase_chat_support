{
  "rules": {
    "users": {
      "$uid": {
        ".read": "auth != null && auth.uid == $uid",
        ".write": "auth != null && auth.uid == $uid",
        ".indexOn": "displayName",
        "displayName": {
          ".read": false,
          ".write": "auth != null && auth.uid == $uid",
          ".validate": "!newData.exists()"
        }
      }
    },
    "conversations":{
      "$guid": {
        ".read": "auth != null && root.child('conversations').child($guid).child('members').hasChild(auth.uid)",
        ".write": "auth != null && root.child('conversations').child($guid).child('admins').hasChild(auth.uid)",
        "admins": {
          ".read": false,
          ".write": "auth != null && root.child('conversations').child($guid).child('admins').hasChild(auth.uid)",
          ".validate": "root.child('conversations').child($guid).child('members').hasChild(newData.val())"
        },
        "closed": {
          ".read": false,
          ".write": "root.child('conversations').child($guid).child('admins').hasChild(auth.uid)",
          ".validate": "(newData.val() === true) || (newData.val() === false)"
        },
        "createdAt": {
          ".read": false,
          ".write": false
        },
        "members": {
          ".read": "auth != null && root.child('conversations').child($guid).child('members').hasChild(auth.uid)",
          ".write": "auth != null && root.child('conversations').child($guid).child('admins').hasChild(auth.uid)"
        },
        "subject": {
          ".read": "auth != null && root.child('conversations').child($guid).child('members').hasChild(auth.uid)",
          ".write": "auth != null && root.child('conversations').child($guid).child('admins').hasChild(auth.uid)"
        },
        "updatedAt": {
          ".read": false,
          ".write": false
        }
      }
    },
    "messages": {
      "$uid": {
        ".read": "auth != null && auth.uid == $uid",
        ".write": "auth != null && auth.uid == $uid",
        ".indexOn": "conversation_id",
        "$messageid": {
          "__response": {
            ".read": false,
            ".write": false
          },
          "auto": {
            ".read": false,
            ".write": false
          },
          "deliveredAt": {
            ".read": "auth != null && auth.uid == $uid",
            ".write": false
          },
          "delivered": {
            ".read": "auth != null && auth.uid == $uid",
            ".write": false
          },
          "conversation_id": {
            ".read": "auth != null && auth.uid == $uid",
            ".write": false
          },
          "message": {
            ".read": "auth != null && auth.uid == $uid",
            ".write": "auth != null && auth.uid == $uid"
          },
          "participants": {
            ".read": "auth != null && auth.uid == $uid",
            ".write": "auth != null && root.child('customer-support-agents').hasChild(auth.uid)"
          },
          "read": {
            ".read": "auth != null && auth.uid == $uid",
            ".write": "auth != null && auth.uid == $uid",
            ".validate": "(newData.val() === true) || (newData.val() === false)"
          },
          "recipients": {
            ".read": false,
            ".write": "auth != null && root.child('customer-support-agents').hasChild(auth.uid)"
          },
          "sentAt": {
            ".read": "auth != null && auth.uid == $uid",
            ".write": false
          },
          "to":{
            ".read": "auth != null && auth.uid == $uid",
            ".write": "auth != null && auth.uid == $uid"
          },
          "title": {
            ".read": "auth != null && auth.uid == $uid",
            ".write": "auth != null && auth.uid == $uid"
          },
          "sender": {
            ".read": "auth != null && auth.uid == $uid",
            ".write": "auth != null && auth.uid == $uid",
            ".validate": "(newData.val() === auth.displayName) || (auth.provider === 'anonymous' && newData.val() === 'Anonymous')"
          },
          "sent": {
            ".read": "auth != null && auth.uid == $uid",
            ".write": false
          }
        }
      }
    },
    "user_conversations": {
      "$uid": {
        ".read": "auth != null && auth.uid == $uid",
        ".write": false,
        ".indexOn": "priority",
        "updatedAt": {
          ".read": "auth != null && auth.uid == $uid",
          ".write": false
        },
        "priority": {
          ".read": "auth != null && auth.uid == $uid",
          ".write": false
        }
      }
    },
    "customer-support-agents": {
      ".indexOn": "lastClientAt",
      "$agentid": {
        ".read": "auth != null && auth.uid == $agentid && root.child('customer-support-agents').hasChild(auth.uid)",
        ".write": "auth != null && auth.uid == $agentid && root.child('customer-support-agents').hasChild(auth.uid)"
      }
    }
  }
}